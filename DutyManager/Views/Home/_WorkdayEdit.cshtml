@using DutyManager.Models
@model Workday
@{
    Model.Employees = new SelectList(Employee.GetAllEmployees(), "EmployeeId", "FullName");
    var dayOfWeek = ((int)Model.DateWork.DayOfWeek) == 0 ? 7 : ((int)Model.DateWork.DayOfWeek);
    var listRoster = Roster.GetAllRoster().Where(x => x.DayOfWeekId == dayOfWeek);
    Model.Roster = new SelectList(listRoster, "RosterId", "RosterName");
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group m-3">
            @Html.EditorFor(model => model.WorkdayId, new { @class = "visually-hidden" })
            <div>
                <div class="row">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Employees, htmlAttributes: new { @class = "form-label control-label col-md-8 ms-2" })
                    </div>
                    <div class="col-md-1 offset-md-1">
                        <button type="button" data-bs-dismiss="modal" class="btn-close" aria-label="Закрыть"></button>
                    </div>
                </div>
                @Html.DropDownListFor(x => x.EmployeeId, Model.Employees, new { @class = "form-select" })
                @*@Html.DropDownList("EmployeeId", Model.Employees)*@
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
            <div>
                <div class="row">
                    @Html.LabelFor(model => model.DateWork, htmlAttributes: new { @class = "form-label control-label col-1 ms-2 mt-2" })
                    <div class="form-check col form-switch ms-3">
                        @*@Html.LabelFor(model => model.IsAlways, htmlAttributes: new { @class = "form-check-label col-md-8 ms-2 mt-2", @for = "SwitchCheck" })*@
                        @Html.EditorFor(model => model.IsAlways, new { htmlAttributes = new { @class = "form-check-input check-box mt-3 pb-1 p-2", @onChange = "changeIsAlways(this)", @id = "SwitchCheck" } })
                        <label class="form-label col-auto ms-0 mt-2" for="SwitchCheck">Постоянно</label>
                    </div>
                </div>

                @Html.EditorFor(model => model.DateWork, new { htmlAttributes = new { @class = "form-control", @onChange = "getroster(this)", @id = "datepicker" } })
                @Html.ValidationMessageFor(model => model.DateWork, "", new { @class = "text-danger" })
            </div>

            

            <div>
                @Html.LabelFor(model => model.Roster, htmlAttributes: new { @class = "form-label control-label col-md-8 ms-2 mt-2" })
                @Html.DropDownListFor(x => x.RosterId, Model.Roster, new { @class = "form-select", @id = "roster" })
            </div>
        </div>


        <fieldset>
            <div class="form-group col-md-12 mb-3 pe-3 text-end">
                <input asp-controller="Home" asp-action="WorkdayEdit" class="btn btn-success" type="submit" value="ОК" />
            </div>
        </fieldset>
    </div>
}